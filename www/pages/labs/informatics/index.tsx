import { NextPage } from "next";

export const Page: NextPage = () => (
    <main>
        <h1>Informatics</h1>

        <h2>Хранение информации</h2>
        <p>
            Тема баз данных часто начинается с изучения реляционных моделей и SQL.
            Что в дальнейшем вызывает немало проблем, когда на поверхность всплывают детали реализации
            и возникают такие термины как "кластерный индекс", "план выполнения запроса" и другие.
            Также сюрпризом становится и NoSQL-направление и подбор наиболее эффективной реализации для
            конкретной задачи (колоночные, KV, ...).
        </p>
        <p>
            С другой стороны, вопрос организации хранилиз выглядит интуитивно понятным и подходящим для
            рассмотрения на языке бытовых примеров. В качестве демонстрации можно взять обычные стеллажи
            с полками. Полка может рассматриваться как страница (большинство СУБД на нижнем уровне
            оперируют страницами данных). Физическое упорядочивание как кластерный индекс, из чего логично
            следует невозможность создать два кластреных индекса. Блокнот, где содержимое полок отсортировано
            по другому параметру - простой индекс. Задача разместить новый предмет на заполненных полках, где
            всё уже было упорядочено, может показать проблему "page split". На примере нескольких комнат со
            стеллажами можно описать партиционирование.
        </p>
        <p>
            Дополнительно подчеркнуть, что это не только вопросы цифрового мира. С ними можно столкнуться и в
            реальности. Например, проблемы в гуманитарных с центрах, с которыми столкнулся автор. Этот же
            пример может продемонстрировать желание создать много индексов (скажем, для одежды - пол, рост,
            возраст, цвет, вид, время года и т.п.) и тем самым показать, какие сложности возникают при росте
            количества индексов.
        </p>
    </main>
);

export default Page;